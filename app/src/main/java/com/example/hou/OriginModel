package originmodel;

/**
    * 
    * 原型模式 doc2是通过originDoc.clone()创建的 
    * 并且doc2第一次输出的时候和originDoc输出是一样的,即doc2是originDoc的一份拷贝,它们的内容是一样的,
    * 而doc2修改了文本内容后并不会影响originDoc的文本内容
    * 保证了originDoc的安全性.
    * 还需要注意的是，通过clone拷贝对象时并不会执行构造函数! 
    * 因此，如果在构造函数中需要一些特殊的初始化操作的类型,
    * 在使用Cloneable实现拷贝时 需要注意构造函数不会执行
    * 
    * */

public class Client {


    public static void main(String[] args) {

        //1. 构建文档对象
        WordDocument originDoc = new WordDocument();
        WordDocument doc2 = null;
                //2.编辑文档,添加图片等
        originDoc.setText("这是一篇文档");
        originDoc.addImage("图片 1 ");
        originDoc.addImage("图片 2 ");
        originDoc.addImage("图片 3 ");
        originDoc.showDocument();

        try {
            //以原始文档为原型，拷贝一份副本
            //此处doc2 通过originDoc.clone 创建的
          doc2 =  originDoc.clone();
        }catch (Exception e){
            e.printStackTrace();
        }

        if (doc2!=null){
            doc2.showDocument();
            doc2.setText("这是修改过的Doc2文本");
            doc2.showDocument();
            originDoc.showDocument();
        }
    }
}


package originmodel;

import java.util.ArrayList;

public class WordDocument implements Cloneable {
    //文本
    private String mText;

    //图片名列表
    private ArrayList<String> mImages = new ArrayList<String>();

    public WordDocument(){
        System.out.println("------- wordDocument构造函数 --------");
    }

    @Override
    protected WordDocument clone() throws CloneNotSupportedException {

        try {
            WordDocument doc = (WordDocument) super.clone();
            doc.mText = this.mText;
            doc.mImages = this.mImages;
            return doc;
        }catch (Exception e){

        }
        return null;
    }

    public String getText(){
        return mText;
    }

    public void setText(String text){
        mText = text;
    }

    public void addImage(String img){
        this.mImages.add(img);
    }

   /**
     * 打印文档内容
     * */

   public void showDocument(){
       System.out.println("----- word Content Start ------");
       System.out.println(" Text : " + mText );
       System.out.println("Images List : ");
       for (String imgName : mImages) {
           System.out.println(" image name : " + imgName);
       }
       System.out.println("------- Word Content End -------");
   }


}
